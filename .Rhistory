gather(party_house, members, dems_lh_90:vac_uh_14) %>%
mutate(year=substr(party_house, 9, 10),
party_house = substr(party_house, 1, 7),
row_name=1:nrow(.)) %>%
spread(party_house, members) %>%
arrange(state, year)
View(state_legs_long)
View(state_legs)
?transform
?seperate
??seperate
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
seperate(party_house, c("party_house", "year"), sep="h_")
?gather
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
seperate_(party_house, c("party_house", "year"), sep="h_")%>$
mutate(year=substr(party_house, 9, 10),
party_house = substr(party_house, 1, 7),
row_name=1:nrow(.)) %>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
seperate_(party_house, c("party_house", "year"), sep="h_")
library(tidyr)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
seperate_(party_house, c("party_house", "year"), sep="h_")
?seperate
??seperate
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
separate(party_house, c("party_house", "year"), sep="h_")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
separate(as.character(party_house), c("party_house", "year"), sep="h_")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
mutate(party_house=as.charcter(party_house)%>%
separate(party_house, c("party_house", "year"), sep="h_")
)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
mutate(party_house=as.character(party_house))%>%
separate(party_house, c("party_house", "year"), sep="h_")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
mutate(party_house=as.character(party_house))
?separate
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
mutate(party_house=as.character(party_house))%>%
separate(party_house, c("party_house", "year"), sep="h_", extra = "merge")
View(state_legs_long)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
separate(party_house, c("party_house", "year"), sep="h_", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
View(state_legs_long)
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "h.", names(state_legs))
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh_90:vac_uh_14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")%>%
spread(party_house, members)
View(state_legs_long)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep="h.", extra = "merge")
state_legs[27,2:153]<-NA
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "hh.", names(state_legs))
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep="h.", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
View(state_legs_long)
state_legs[27,2:153]<-NA
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "hh.", names(state_legs))
state_legs_wide<-state_legs
source("scripts/load_packages.R")
load("data/loaded_dfs.Rdata")
state_legs[27,2:153]<-NA
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "h.", names(state_legs))
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep=".", extra = "merge")
source("scripts/load_packages.R")
load("data/loaded_dfs.Rdata")
state_legs[27,2:153]<-NA
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "z", names(state_legs))
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lh.90:vac_uh.14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
###SOURCE AND LOAD###
source("scripts/load_packages.R")
load("data/loaded_dfs.Rdata")
state_legs[27,2:153]<-NA
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "hz", names(state_legs))
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
View(state_legs_long)
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste("19",state_legs_long$year)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste("19",state_legs_long$yearstate_legs_long$year[as.numeric(state_legs_long$year)<90])
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("19",state_legs_long$yearstate_legs_long$year[as.numeric(state_legs_long$year)<90])
View(state_legs_long)
?paste
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("19",as.character(state_legs_long$yearstate_legs_long$year[as.numeric(state_legs_long$year)<90]), sep="")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("19",as.character(state_legs_long$year[as.numeric(state_legs_long$year)<90==T]), sep="")
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("19",as.character(state_legs_long$year[as.numeric(state_legs_long$year)<90]), sep="")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("20",as.character(state_legs_long$year[as.numeric(state_legs_long$year)<90]), sep="")
state_legs_long$year[as.numeric(state_legs_long$year)>90]<-paste0("19",as.character(state_legs_long$year[as.numeric(state_legs_long$year)>90]), sep="")
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)>90]<-paste0("19",as.character(state_legs_long$year[as.numeric(state_legs_long$year)>90]), sep="")
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("20",as.character(state_legs_long$year[as.numeric(state_legs_long$year)<90]), sep="")
View(state_legs_long)
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)>89]<-paste0("19",as.character(state_legs_long$year[as.numeric(state_legs_long$year)>89]), sep="")
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("20",as.character(state_legs_long$year[as.numeric(state_legs_long$year)<90]), sep="")
state_legs_long[2:10]<-sapply(state_legs_long[2:10], as.numeric)
state_legs_long$lower_house[state_legs_long$dems_lh>state_legs_long$rep_lh]<-"D"
View(state_legs_long)
state_legs_long$upper_house[state_legs_long$dems_uh>state_legs_long$rep_uh]<-"D"
state_legs_long$upper_house[state_legs_long$dems_uh<state_legs_long$rep_uh]<-"R"
state_legs_long$legs_control[(state_legs_long$lower_house=="D"
& state_legs_long$upper_house=="D"]<-"D"
state_legs_long$legs_control[(state_legs_long$lower_house=="D"
& state_legs_long$upper_house=="D")]<-"D"
View(state_legs_long)
state_legs_long$legs_control[(state_legs_long$lower_house=="R"
& state_legs_long$upper_house=="R")]<-"R"
View(state_legs_long)
state_legs_long[2:10]<-sapply(state_legs_long[2:10], as.numeric)
state_legs_long$lower_house[state_legs_long$dems_lh>state_legs_long$rep_lh]<-"D"
state_legs_long$lower_house[state_legs_long$dems_lh<state_legs_long$rep_lh]<-"R"
state_legs_long$upper_house[state_legs_long$dems_uh>state_legs_long$rep_uh]<-"D"
state_legs_long$upper_house[state_legs_long$dems_uh<state_legs_long$rep_uh]<-"R"
state_legs_long$legs_control[(state_legs_long$lower_house=="D"
& state_legs_long$upper_house=="D")]<-"D"
state_legs_long$legs_control[(state_legs_long$lower_house=="R"
& state_legs_long$upper_house=="R")]<-"R"
View(state_legs_long)
state_legs_long$legs_control[(state_legs_long$legs_control!="R"
& state_legs_long$legs_control!="D")]<-"Split"
View(state_legs_long)
state_legs_long$lower_house[state_legs_long$dems_lh>state_legs_long$rep_lh]<-"D"
state_legs_long$lower_house[state_legs_long$dems_lh<state_legs_long$rep_lh]<-"R"
state_legs_long$lower_house[state_legs_long$dems_lh==state_legs_long$rep_lh]<-"Split"
state_legs_long$upper_house[state_legs_long$dems_uh>state_legs_long$rep_uh]<-"D"
state_legs_long$upper_house[state_legs_long$dems_uh<state_legs_long$rep_uh]<-"R"
state_legs_long$upper_house[state_legs_long$dems_uh==state_legs_long$rep_uh]<-"Split"
View(state_legs_long)
state_legs_long$legs_control[(state_legs_long$lower_house!=state_legs_long$upper_house)]<-"Split"
state_legs_long$legs_control[(state_legs_long$lower_house=="Split" | state_legs_long$upper_house=="Split")]<-"Split"
View(state_legs_long)
View(state_legs_long)
state_legs_long$rep_legs[state_legs_long$legs_control=="R"]<-1
state_legs_long$rep_legs[state_legs_long$legs_control!="R"]<-0
View(state_legs_long)
system("git add .")
system("pwd")
system("git init")
system("git add remote "https://github.com/cerees/segregation_and_neighborhood_health.git"")
system("git add remote 'https://github.com/cerees/segregation_and_neighborhood_health.git'")
system("git add remote 'https://github.com/cerees/everify_diffusion'")
system("pwd")
system("git init")
system("git add remote 'https://github.com/cerees/everify_diffusion'")
system("git add remote origin 'https://github.com/cerees/everify_diffusion'")
system("git remote add origin 'https://github.com/cerees/everify_diffusion'")
system("git add .")
system("git commit -m 'initial commit'")
system("git push")
system("sh ~/Documents/scripts/bigfile_ignore.sh")
system("git add .")
system("git commit -m 'initial commit'")
system("git push")
system("git push orgin master")
system("git push origin master")
system("sh ~/Documents/scripts/bigfile_ignore.sh")
system("git add .")
system("git commit -m 'initial commit'")
system("sh ~/Documents/scripts/bigfile_ignore.sh")
system("git push origin master")
system("git push origin master")
system("sh ~/Documents/scripts/bigfile_ignore.sh")
#system("git init")
#system("git remote add origin 'https://github.com/cerees/everify_diffusion'")
system("git add .")
system("git commit -m 'initial commit'")
#system("git pull master origin")
system("git push origin master")
acs_nativity_file_paths<-list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T)
rbind(list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T), list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T))
c(list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T), list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T))
acs_urbanicity_file_paths<-c(list.files(path="data/originals/acs_data/urbanicity_2000", pattern="*ann.csv"),
list.files(path="data/originals/acs_data/urbanicity_2010", pattern="*ann.csv"))
acs_urbanicity_files<-lapply(acs_urbanicity_file_paths, read.csv)
acs_urbanicity_file_paths<-c(list.files(path="data/originals/acs_data/urbanicity_2000", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/urbanicity_2010", pattern="*ann.csv", full=T))
acs_urbanicity_files<-lapply(acs_urbanicity_file_paths, read.csv)
state_leg_elections_file_paths<-list.files(path="data/originals/state_legs_elections/", pattern='*.csv', full=T)
state_leg_elections_files<-lapply(state_leg_elections_file_paths, read.csv)
#Executive Bracnch Election Frequencies
state_exec_elections_file_paths<-list.files(path="data/originals/state_exec_elections/", pattern='*.csv', full=T)
state_exec_elections_files<-lapply(state_exec_elections_file_paths, read.csv)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
##############################
###LOAD ORIGINAL DATA FILES###
##############################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#####################
###SOURCE PACKAGES###
#####################
source("scripts/load_packages.R")
###############
###LOAD DATA###
###############
###EVERIFY ADOPTION###
#everify timeing
#retrieved from the National Conference of State Legislatures
#http://www.ncsl.org/research/immigration/everify-faq.aspx
everify<-read.csv("data/originals/everify_adoption.csv")
names(everify)<- tolower(names(everify))
###ACS DATA###
#Retrieved from the ACS
#demographic data
#get census api here: http://api.census.gov/data/key_signup.html
#'Working with acs.R' provides a nice overview of using the acs package,
#'however at this time it is not compatable w/one year estimates.
#install api
#api.key.install(key="1d4e749980069ead295f370d51a74db541f5b7d7")
#create geo.set, use acs.lookup() and geo.make()
#us.states.geo<-geo.make(state = "*")
#tot_pop<-acs.fetch(endyear=2011, span=5, geography=us.states.geo, table.number="B01003")
#Instead table number S0501 for years 2006-2013 retrieved from factfinder
#NATIVITY
acs_nativity_file_paths<-list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T)
acs_nativity_files<-lapply(acs_nativity_file_paths, read.csv)
#URBANICITY
acs_urbanicity_file_paths<-c(list.files(path="data/originals/acs_data/urbanicity_2000", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/urbanicity_2010", pattern="*ann.csv", full=T))
acs_urbanicity_files<-lapply(acs_urbanicity_file_paths, read.csv)
#EDUCAITON
acs_educ_file_paths<-c(list.files(path="data/originals/acs_data/education_1year", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/education_3year", pattern="*ann.csv", full=T))
acs_educ_files<-lapply(acs_educ_file_paths, read.csv)
#INCOME
acs_inc_file_paths<-c(list.files(path="data/originals/acs_data/income_1year", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/income_3year", pattern="*ann.csv", full=T))
acs_inc_files<-lapply(acs_inc_file_paths, read.csv)
###BLS ECONOMIC DATA###
#Retrieved from the BLS
#API Key  API key is: a2e2cf2da69c44b6b7180cbbef83aba3.
bls_codes<-read.csv("data/originals/bls_data/bls_codes.csv")
payload<-list('seriesid'=bls_codes$code,
'startyear'=2006,
'endyear'=2014,
'catalog'=FALSE,
'calculations'=T,
'annualaverage'=TRUE,
'registrationKey'='a2e2cf2da69c44b6b7180cbbef83aba3')
bls_json <- blsAPI(payload, 2)
bls_files <- fromJSON(bls_json, nullValue = NA)
###POLITICAL VARIABLES###
#Republican Legislature
#retrieved from the Statistical Abstract
#http://statabs.proquest.com/sa/?id=d8b95d58-4917-43f9-8d8e-5a418a29253b
#Original source: http://knowledgecenter.csg.org/kc/category/content-type/content-type/book-states
state_legs<-read.csv("data/originals/state_legs_1990_2014.csv")
#Presidential Elections
#retrieved from the FEC
#http://www.fec.gov/pubrec/electionresults.shtml
pres_file_paths<-list.files(path="data/originals/pres_elections/", pattern='*.csv', full=T)
pres_files<-lapply(pres_file_paths, read.csv)
#Federal Elections
#retrieved from the FEC
#http://www.fec.gov/pubrec/electionresults.shtml
fed_file_paths<-list.files(path="data/originals/fed_elections/", pattern='*.csv', full=T)
fed_files<-lapply(fed_file_paths, read.csv)
#Gubernatorial Elections
#retreived from the Council of State Governments' Book of States
#http://knowledgecenter.csg.org/kc/category/content-type/content-type/book-states
gov_elections_file_paths<-list.files(path="data/originals/gov_elections/", pattern='*.csv', full=T)
gov_elections_files<-lapply(gov_elections_file_paths, read.csv)
#Governor Party Affiliation
#retreived from the Council of State Governments' Book of States
#http://knowledgecenter.csg.org/kc/category/content-type/content-type/book-states
gov_party_file_paths<-list.files(path="data/originals/governors", pattern='*.csv', full=T)
gov_party_files<-lapply(gov_party_file_paths, read.csv)
#Citizen Ideaology
citizen_ideaology<-read.csv("data/originals/citizen_ideaology.csv")
#Campaign Contributions
campaign_contributions<-read.csv("data/originals/campaign_contributions.csv")
#State Legs Election Frequencies
state_leg_elections_file_paths<-list.files(path="data/originals/state_legs_elections/", pattern='*.csv', full=T)
state_leg_elections_files<-lapply(state_leg_elections_file_paths, read.csv)
#Executive Bracnch Election Frequencies
state_exec_elections_file_paths<-list.files(path="data/originals/state_exec_elections/", pattern='*.csv', full=T)
state_exec_elections_files<-lapply(state_exec_elections_file_paths, read.csv)
###SPATIAL###
###retreived from ESRI###
us_states<-readOGR("data/originals/us_states", "states")
save(everify, acs_nativity_files, bls_files, bls_codes, state_legs,
pres_files, fed_files, gov_party_files,
gov_elections_files, us_states, campaign_contributions,
citizen_ideaology, acs_educ_files, acs_inc_files,
acs_urbanicity_files, state_exec_elections_files, state_leg_elections_files,
file="data/loaded_dfs.Rdata")
?fromJSON
load("data/loaded_dfs.Rdata")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
##############################
###LOAD ORIGINAL DATA FILES###
##############################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#####################
###SOURCE PACKAGES###
#####################
source("scripts/load_packages.R")
###############
###LOAD DATA###
###############
###EVERIFY ADOPTION###
#everify timeing
#retrieved from the National Conference of State Legislatures
#http://www.ncsl.org/research/immigration/everify-faq.aspx
everify<-read.csv("data/originals/everify_adoption.csv")
names(everify)<- tolower(names(everify))
###ACS DATA###
#Retrieved from the ACS
#demographic data
#get census api here: http://api.census.gov/data/key_signup.html
#'Working with acs.R' provides a nice overview of using the acs package,
#'however at this time it is not compatable w/one year estimates.
#install api
#api.key.install(key="1d4e749980069ead295f370d51a74db541f5b7d7")
#create geo.set, use acs.lookup() and geo.make()
#us.states.geo<-geo.make(state = "*")
#tot_pop<-acs.fetch(endyear=2011, span=5, geography=us.states.geo, table.number="B01003")
#Instead table number S0501 for years 2006-2013 retrieved from factfinder
#NATIVITY
acs_nativity_file_paths<-list.files(path="data/originals/acs_data/nativity_and_race", pattern='*.csv', full=T)
acs_nativity_files<-lapply(acs_nativity_file_paths, read.csv)
#URBANICITY
acs_urbanicity_file_paths<-c(list.files(path="data/originals/acs_data/urbanicity_2000", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/urbanicity_2010", pattern="*ann.csv", full=T))
acs_urbanicity_files<-lapply(acs_urbanicity_file_paths, read.csv)
#EDUCAITON
acs_educ_file_paths<-c(list.files(path="data/originals/acs_data/education_1year", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/education_3year", pattern="*ann.csv", full=T))
acs_educ_files<-lapply(acs_educ_file_paths, read.csv)
#INCOME
acs_inc_file_paths<-c(list.files(path="data/originals/acs_data/income_1year", pattern="*ann.csv", full=T),
list.files(path="data/originals/acs_data/income_3year", pattern="*ann.csv", full=T))
acs_inc_files<-lapply(acs_inc_file_paths, read.csv)
###BLS ECONOMIC DATA###
#Retrieved from the BLS
#API Key  API key is: a2e2cf2da69c44b6b7180cbbef83aba3.
bls_codes<-read.csv("data/originals/bls_data/bls_codes.csv")
payload<-list('seriesid'=bls_codes$code,
'startyear'=2006,
'endyear'=2014,
'catalog'=FALSE,
'calculations'=T,
'annualaverage'=TRUE,
'registrationKey'='a2e2cf2da69c44b6b7180cbbef83aba3')
bls_json <- blsAPI(payload, 2)
bls_files <- fromJSON(bls_json, nullValue = NA)
###POLITICAL VARIABLES###
#Republican Legislature
#retrieved from the Statistical Abstract
#http://statabs.proquest.com/sa/?id=d8b95d58-4917-43f9-8d8e-5a418a29253b
#Original source: http://knowledgecenter.csg.org/kc/category/content-type/content-type/book-states
state_legs<-read.csv("data/originals/state_legs_1990_2014.csv")
#Presidential Elections
#retrieved from the FEC
#http://www.fec.gov/pubrec/electionresults.shtml
pres_file_paths<-list.files(path="data/originals/pres_elections/", pattern='*.csv', full=T)
pres_files<-lapply(pres_file_paths, read.csv)
#Federal Elections
#retrieved from the FEC
#http://www.fec.gov/pubrec/electionresults.shtml
fed_file_paths<-list.files(path="data/originals/fed_elections/", pattern='*.csv', full=T)
fed_files<-lapply(fed_file_paths, read.csv)
#Gubernatorial Elections
#retreived from the Council of State Governments' Book of States
#http://knowledgecenter.csg.org/kc/category/content-type/content-type/book-states
gov_elections_file_paths<-list.files(path="data/originals/gov_elections/", pattern='*.csv', full=T)
gov_elections_files<-lapply(gov_elections_file_paths, read.csv)
#Governor Party Affiliation
#retreived from the Council of State Governments' Book of States
#http://knowledgecenter.csg.org/kc/category/content-type/content-type/book-states
gov_party_file_paths<-list.files(path="data/originals/governors", pattern='*.csv', full=T)
gov_party_files<-lapply(gov_party_file_paths, read.csv)
#Citizen Ideaology
citizen_ideaology<-read.csv("data/originals/citizen_ideaology.csv")
#Campaign Contributions
campaign_contributions<-read.csv("data/originals/campaign_contributions.csv")
#State Legs Election Frequencies
state_leg_elections_file_paths<-list.files(path="data/originals/state_legs_elections/", pattern='*.csv', full=T)
state_leg_elections_files<-lapply(state_leg_elections_file_paths, read.csv)
#Executive Bracnch Election Frequencies
state_exec_elections_file_paths<-list.files(path="data/originals/state_exec_elections/", pattern='*.csv', full=T)
state_exec_elections_files<-lapply(state_exec_elections_file_paths, read.csv)
###SPATIAL###
###retreived from ESRI###
us_states<-readOGR("data/originals/us_states", "states")
###################
###SAVE OUT DATA###
###################
save(everify, acs_nativity_files, bls_files, bls_codes, state_legs,
pres_files, fed_files, gov_party_files,
gov_elections_files, us_states, campaign_contributions,
citizen_ideaology, acs_educ_files, acs_inc_files,
acs_urbanicity_files, state_exec_elections_files, state_leg_elections_files,
file="data/loaded_dfs.Rdata")
