#HC01_EST_VC01==totpop; HC03_EST_VC01==for_pop;
#HC05_EST_VC01==non_citizen_pop; "HC01_EST_VC18==blk_pop;
#HC01_EST_VC28==hisp_pop; HC03_EST_VC28==hisp_for_pop;
#HC05_EST_VC28==hisp_non_citizen_pop
#Subset Data Frames
acs_urbanicity_06_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_07_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_08_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_09_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_10_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_11_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_12_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_13_varnames<-c("GEO.id", "GEO.id2", "GEO.display.label",
"HD01_VD01")
acs_urbanicity_06<- acs_06_est_b01003_with_ann[, c(acs_urbanicity_06_varnames)]
acs_urbanicity_07<- acs_07_1yr_b01003_with_ann[, c(acs_urbanicity_07_varnames)]
acs_urbanicity_08<- acs_08_1yr_b01003_with_ann[, c(acs_urbanicity_08_varnames)]
acs_urbanicity_09<- acs_09_1yr_b01003_with_ann[, c(acs_urbanicity_09_varnames)]
acs_urbanicity_10<- acs_10_1yr_b01003_with_ann[, c(acs_urbanicity_10_varnames)]
acs_urbanicity_11<- acs_11_1yr_b01003_with_ann[, c(acs_urbanicity_11_varnames)]
acs_urbanicity_12<- acs_12_1yr_b01003_with_ann[, c(acs_urbanicity_12_varnames)]
acs_urbanicity_13<- acs_13_1yr_b01003_with_ann[, c(acs_urbanicity_13_varnames)]
acs_urbanicity_07_3yr<- acs_07_3yr_b01003_with_ann[, c(acs_urbanicity_07_varnames)]
acs_urbanicity_08_3yr<- acs_08_3yr_b01003_with_ann[, c(acs_urbanicity_08_varnames)]
acs_urbanicity_09_3yr<- acs_09_3yr_b01003_with_ann[, c(acs_urbanicity_09_varnames)]
acs_urbanicity_10_3yr<- acs_10_3yr_b01003_with_ann[, c(acs_urbanicity_10_varnames)]
acs_urbanicity_11_3yr<- acs_11_3yr_b01003_with_ann[, c(acs_urbanicity_11_varnames)]
acs_urbanicity_12_3yr<- acs_12_3yr_b01003_with_ann[, c(acs_urbanicity_12_varnames)]
acs_urbanicity_13_3yr<- acs_13_3yr_b01003_with_ann[, c(acs_urbanicity_13_varnames)]
acs_urbanicity_09_5yr<- acs_09_5yr_b01003_with_ann[, c(acs_urbanicity_09_varnames)]
acs_urbanicity_10_5yr<- acs_10_5yr_b01003_with_ann[, c(acs_urbanicity_10_varnames)]
acs_urbanicity_11_5yr<- acs_11_5yr_b01003_with_ann[, c(acs_urbanicity_11_varnames)]
acs_urbanicity_12_5yr<- acs_12_5yr_b01003_with_ann[, c(acs_urbanicity_12_varnames)]
acs_urbanicity_13_5yr<- acs_13_5yr_b01003_with_ann[, c(acs_urbanicity_13_varnames)]
not_in_2010_1yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_10$GEO.display.label==F]
not_in_2011_1yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_11$GEO.display.label==F]
not_in_2012_1yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_12$GEO.display.label==F]
not_in_2013_1yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_13$GEO.display.label==F]
acs_urbanicity_10<-rbind(acs_urbanicity_10, acs_urbanicity_10_3yr[acs_urbanicity_10_3yr$GEO.display.label %in% not_in_2010_1yr_urbanicity==T,])
acs_urbanicity_11<-rbind(acs_urbanicity_11, acs_urbanicity_11_3yr[acs_urbanicity_11_3yr$GEO.display.label %in% not_in_2011_1yr_urbanicity==T,])
acs_urbanicity_12<-rbind(acs_urbanicity_12, acs_urbanicity_12_3yr[acs_urbanicity_12_3yr$GEO.display.label %in% not_in_2012_1yr_urbanicity==T,])
acs_urbanicity_13<-rbind(acs_urbanicity_13, acs_urbanicity_13_3yr[acs_urbanicity_13_3yr$GEO.display.label %in% not_in_2013_1yr_urbanicity==T,])
not_in_2010_3yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_10$GEO.display.label==F]
not_in_2011_3yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_11$GEO.display.label==F]
not_in_2012_3yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_12$GEO.display.label==F]
not_in_2013_3yr_urbanicity<-acs_urbanicity_09$GEO.display.label[acs_urbanicity_09$GEO.display.label %in% acs_urbanicity_13$GEO.display.label==F]
acs_urbanicity_10<-rbind(acs_urbanicity_10, acs_urbanicity_10_5yr[acs_urbanicity_10_5yr$GEO.display.label %in% not_in_2010_3yr_urbanicity==T,])
acs_urbanicity_11<-rbind(acs_urbanicity_11, acs_urbanicity_11_5yr[acs_urbanicity_11_5yr$GEO.display.label %in% not_in_2011_3yr_urbanicity==T,])
acs_urbanicity_12<-rbind(acs_urbanicity_12, acs_urbanicity_12_5yr[acs_urbanicity_12_5yr$GEO.display.label %in% not_in_2012_3yr_urbanicity==T,])
acs_urbanicity_13<-rbind(acs_urbanicity_13, acs_urbanicity_13_5yr[acs_urbanicity_13_5yr$GEO.display.label %in% not_in_2013_3yr_urbanicity==T,])
acs_urbanicity_name_change<- function(x) {
names(x) <- c("geoid", "state_fips", "state_name",
"urban_pop")
return(x)
}
acs_urbanicity_long<-lapply(list(acs_urbanicity_06,acs_urbanicity_07,acs_urbanicity_08,acs_urbanicity_09,
acs_urbanicity_10, acs_urbanicity_11, acs_urbanicity_12, acs_urbanicity_13), acs_urbanicity_name_change)
for (i in seq(years)){
acs_urbanicity_long[[i]]$year<-years[i]
}
acs_urbanicity_long<-do.call(smartbind, acs_urbanicity_long)
acs_urbanicity_long<-acs_urbanicity_long[acs_urbanicity_long$geoid!="Id",]
acs_urbanicity_long<-acs_urbanicity_long[,c("geoid", "state_fips", "state_name", "year",
"urban_pop")]
not_states_name<-c("Puerto Rico", "District of Columbia", "District of Columbia -- Urban")
acs_urbanicity_long<- acs_urbanicity_long[(acs_urbanicity_long$state_name %in% not_states_name==F),]
state_names_labels<- data.frame(do.call('rbind', (strsplit(acs_urbanicity_long$state_name, ' --', fixed = T))))
acs_urbanicity_long$state_name<- state_names_labels$X1
###ACS MERGE###
acs_long<-merge(acs_income_long, acs_education_long, by = c("state_fips", "year"))
acs_long<-merge(acs_long, acs_nativity_long, by = c("state_fips", "year"))
acs_long<-merge(acs_long, acs_urbanicity_long, by = c("state_fips", "year"))
acs_long<-acs_long[,c(-6,-7,-9,-10,-20,-21)]
acs_long<-acs_long%>%
rename(geoid=geoid.x, state_name=state_name.x)
acs_long[,c(5:16)]<- sapply(acs_long[,c(5:16)], as.numeric)
acs_long$pct_urban<- (acs_long$urban_pop/acs_long$tot_pop)*100
rm(list=ls(pattern="acs_[^l]"))
rm(list=ls(pattern="not*"))
###BLS###
apiDF <- function(data){
df <- data.frame(year=character(),
period=character(),
periodName=character(),
value=character(),
stringsAsFactors=FALSE)
i <- 0
for(d in data){
i <- i + 1
df[i,] <- unlist(d)
}
return(df)
}
for(c in 1:length(bls_codes$code)){
df<-apiDF(bls_files$Results$series[[c]]$data)
df$state<-paste0(as.character(bls_codes$state[c]))
assign(paste0(bls_codes$state[c], "_unemp"), df)
}
bls_names<-ls(pattern="*_unemp")
bls_long<-ldply(bls_names, get)
bls_long<-bls_long[bls_long$periodName=="Annual",]
bls_long<-bls_long[,c("state", "year", "value")]
names(bls_long)<-c("state_name", "year", "unemp_rate")
rm(list=ls(pattern="_unemp"))
bls_long<-arrange(bls_long, state_name, year)
bls_long$unemp_rate<- as.numeric(bls_long$unemp_rate)
rm(list=ls(pattern="bls_[^l]"))
rm(df)
###PRESIDENTIAL ELECTIONS###
trim_parantheses<- function(x) gsub('\\(.\\)', '', x)
trim_trailing <- function (x) gsub("\\s+$", "", x)
trim_comma<- function (x) gsub(",", "", x)
pres_elections_long<-do.call(rbind, pres_files)
pres_elections_long$rep_ecvs[is.na(pres_elections_long$rep_ecvs)==T]<-0
pres_elections_long$dem_ecvs[is.na(pres_elections_long$dem_ecvs)==T]<-0
pres_elections_long[]<- data.frame(lapply(pres_elections_long, trim_comma))
pres_elections_long[,c("rep_ecvs", "dem_ecvs", "rep_presvotes",
"dem_presvotes", "oth_presvotes", "tot_presvotes",
"year")]<-data.frame(lapply(pres_elections_long[,c("rep_ecvs", "dem_ecvs", "rep_presvotes",
"dem_presvotes", "oth_presvotes", "tot_presvotes",
"year")], as.numeric))
pres_elections_long$pct_presvotes_rep<- (pres_elections_long$rep_presvotes/pres_elections_long$tot_presvotes)*100
pres_elections_long$pct_presvotes_dem<- (pres_elections_long$dem_presvotes/pres_elections_long$tot_presvotes)*100
pres_elections_long$pct_presvotes_oth<- (pres_elections_long$oth_presvotes/pres_elections_long$tot_presvotes)*100
pres_elections_long$pres_party_state[pres_elections_long$pct_presvotes_dem>pres_elections_long$pct_presvotes_rep]<-"D"
pres_elections_long$pres_party_state[pres_elections_long$pct_presvotes_dem<pres_elections_long$pct_presvotes_rep]<-"R"
pres_elections_long$rep_pres_state<-0
pres_elections_long$rep_pres_state[pres_elections_long$pres_party_state=="R"]<-1
pres_elections_long<-select(pres_elections_long, state_abb=state, year, tot_presvotes, pct_presvotes_dem,
pct_presvotes_rep, pct_presvotes_oth, pres_party_state, rep_pres_state)
rm(pres_files)
###FEDERAL ELECTIONS###
fed_elections_long<-do.call(smartbind, fed_files)
fed_elections_long[, c("dem_fedvotes", "rep_fedvotes", "oth_fedvotes")]<-sapply(fed_elections_long[, c("dem_fedvotes", "rep_fedvotes", "oth_fedvotes")], function(x){
as.numeric(gsub(",","", x))
})
not_states_abb<-c("AS", "GU", "PR", "MP", "VI", "DC")
fed_elections_long<-data.frame(fed_elections_long)%>%
mutate(pct_fedvotes_dem=((dem_fedvotes/(dem_fedvotes+rep_fedvotes+oth_fedvotes))*100),
pct_fedvotes_rep=((rep_fedvotes/(dem_fedvotes+rep_fedvotes+oth_fedvotes))*100))%>%
select(state_abb=state, year, pct_fedvotes_dem, pct_fedvotes_rep, dem_fedvotes, rep_fedvotes)
fed_elections_long<- fed_elections_long[(fed_elections_long$state_abb %in% not_states_abb==F),]
fed_elections_long<- fed_elections_long[,c("state_abb", "year", "pct_fedvotes_dem", "pct_fedvotes_rep")]
rm(fed_files)
###GUBERNATORIAL ELECTIONS###
gov_elections_long<-do.call(smartbind, gov_elections_files)
gov_elections_long[]<-as.data.frame(sapply(gov_elections_long, trim_parantheses))
gov_elections_long[]<-as.data.frame(sapply(gov_elections_long, trim_trailing))
gov_elections_long[]<-as.data.frame(sapply(gov_elections_long, trim_comma))
gov_elections_long<-unique(gov_elections_long)
gov_elections_long<- gov_elections_long[,c("states", "year", "election_year",
"rep_pct", "dem_pct", "ind_pct",
"oth_pct", "tot_votes")]
gov_elections_long[,c("year", "election_year",
"rep_pct", "dem_pct", "ind_pct",
"oth_pct", "tot_votes")]<-data.frame(lapply(gov_elections_long[,c("year", "election_year",
"rep_pct", "dem_pct", "ind_pct",
"oth_pct", "tot_votes")], as.numeric))
gov_elections_long<- rename(gov_elections_long, state_name=states, pct_govvotes_dem=dem_pct, pct_govvotes_rep=rep_pct,
pct_govvotes_ind=ind_pct, pct_govvotes_oth=oth_pct, tot_govvotes=tot_votes,
gov_election_year=election_year)
rm(gov_elections_files)
###GUBERNATORIAL PARTY AFFILIATION###
for (i in seq(years)){
gov_party_files[[i]]$year<-years[i]
}
gov_party_long<-do.call(smartbind, gov_party_files)
gov_party_long$rep_gov[gov_party_long$party=="R"]<-1
gov_party_long$rep_gov[gov_party_long$party!="R"]<-0
gov_party_long<- gov_party_long[,c("state", "year", "party", "rep_gov")]
gov_party_long<- rename(gov_party_long, state_name=state, gov_party=party)
rm(gov_party_files)
###EXECUTIVE ELECTION FREQUENCY###
state_exec_elections_long<-do.call(smartbind, state_exec_elections_files)
state_exec_elections_long$gov_election<-0
state_exec_elections_long$gov_election[grepl('^G,', state_exec_elections_long$elections)==T]<-1
state_exec_elections_long<-state_exec_elections_long[,c("state_name", "year", "gov_election")]
state_exec_elections_long$state_name<- trim_parantheses(state_exec_elections_long$state_name)
state_exec_elections_long$state_name<- trim_trailing(state_exec_elections_long$state_name)
rm(state_exec_elections_files)
###STATE LEGISLATURE ELECTIONS###
state_legs[27,2:153]<-NA
names(state_legs)<- gsub("oth", "other", names(state_legs))
names(state_legs)<- gsub("h_", "hz", names(state_legs))
state_legs_wide<-state_legs
state_legs_long<-state_legs_wide%>%
gather(party_house, members, dems_lhz90:vac_uhz14) %>%
separate(party_house, c("party_house", "year"), sep="z", extra = "merge")%>%
spread(party_house, members) %>%
arrange(state, year)
state_legs_long$year[as.numeric(state_legs_long$year)>89]<-paste0("19",as.character(state_legs_long$year[as.numeric(state_legs_long$year)>89]), sep="")
state_legs_long$year[as.numeric(state_legs_long$year)<90]<-paste0("20",as.character(state_legs_long$year[as.numeric(state_legs_long$year)<90]), sep="")
state_legs_long[2:10]<-sapply(state_legs_long[2:10], as.numeric)
state_legs_long$lower_house[state_legs_long$dems_lh>state_legs_long$rep_lh]<-"D"
state_legs_long$lower_house[state_legs_long$dems_lh<state_legs_long$rep_lh]<-"R"
state_legs_long$lower_house[state_legs_long$dems_lh==state_legs_long$rep_lh]<-"Split"
state_legs_long$upper_house[state_legs_long$dems_uh>state_legs_long$rep_uh]<-"D"
state_legs_long$upper_house[state_legs_long$dems_uh<state_legs_long$rep_uh]<-"R"
state_legs_long$upper_house[state_legs_long$dems_uh==state_legs_long$rep_uh]<-"Split"
state_legs_long$legs_control[(state_legs_long$lower_house=="D"
& state_legs_long$upper_house=="D")]<-"D"
state_legs_long$legs_control[(state_legs_long$lower_house=="R"
& state_legs_long$upper_house=="R")]<-"R"
state_legs_long$legs_control[(state_legs_long$lower_house!=state_legs_long$upper_house)]<-"Split"
state_legs_long$legs_control[(state_legs_long$lower_house=="Split" | state_legs_long$upper_house=="Split")]<-"Split"
state_legs_long$rep_legs[state_legs_long$legs_control=="R"]<-1
state_legs_long$rep_legs[state_legs_long$legs_control!="R"]<-0
state_legs_long<- select(state_legs_long, state_name=state, year, rep_state_legs=rep_legs)
state_legs_long$state_name<- trim_trailing(state_legs_long$state_name)
rm(state_legs)
###STATE LEGISLATURE ELECTION FREQUENCY###
state_legs_elections_long<-do.call(smartbind, state_legs_elections_files)
state_legs_elections_long[,c("tot_senate","tot_house","senate_elections",
"house_elections","year")]<-lapply(state_legs_elections_long[,c("tot_senate","tot_house",
"senate_elections",
"house_elections","year")],
as.numeric)
state_legs_elections_long$tot_state_elections<- state_legs_elections_long$senate_elections+
state_legs_elections_long$house_elections
state_legs_elections_long<- select(state_legs_elections_long, state_name, year, tot_state_elections)
rm(state_legs_elections_files)
###CAMPAIGN CONTRIBUTIONS###
campaign_contributions_long<- campaign_contributions%>%
select(state_abb=Election_State, year=Election_Year, party=General_Party, office=General_Office, sector=Broad_Sector, donations=X._of_Records, donation_ammount=Total_.)
campaign_contributions_long$state_legs_election<-0
campaign_contributions_long$state_legs_election[(campaign_contributions_long$office=="State Senate"|
campaign_contributions_long$office=="State House/Assembly")]<-1
campaign_contributions_long<- campaign_contributions_long%>%
group_by(state_abb, year, sector)%>%
summarise(donation_ammount=sum(donation_ammount))%>%
spread(sector, donation_ammount)%>%
rename(agriculture_donations=Agriculture, construction_donations=Construction)
campaign_contributions_long$agriculture_donations[campaign_contributions_long$agriculture_donations<0]<-0
campaign_contributions_long$construction_donations[campaign_contributions_long$construction_donations<0]<-0
campaign_contributions_long<-filter(campaign_contributions_long, year>2004)
rm(campaign_contributions)
###CITIZEN IDEAOLOGY###
citizen_ideaology_long<- citizen_ideaology%>%
filter(year>2005)%>%
rename(state_name=statename, state_fips=state, citizen_idea=citi6013,
state_idea_adacope=inst6013_adacope,
state_idea_nominal=inst6014_nom)
citizen_ideaology_long<- select(citizen_ideaology_long, state_name, year, state_fips, citizen_idea)
citizen_ideaology_long<- filter(citizen_ideaology_long, year>=2006)
rm(citizen_ideaology)
###STATE NAMES###
state_names_long<- state_names%>%
select(state_name=name, state_abb=abbreviation, state_fips=fips_state)
rm(state_names, state_names_labels)
###STATES SHAPEFILE###
us_states <- us_states[!us_states$STATE_NAME %in% c("District of Columbia", "Alaska", "Hawaii"),]
#us_states<-us_states[us_states$STATE_NAME!="District of Columbia",]
#us_states<-us_states[us_states$STATE_NAME!="Alaska",]
#us_states<-us_states[us_states$STATE_NAME!="Hawaii",]
#####################
###MERGE DATA SETS###
#####################
full_data_long<- merge(state_names_long[,c("state_abb", "state_name")], everify_long, by="state_abb", all.y=T)
full_data_long<- merge(full_data_long, acs_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, bls_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, campaign_contributions_long, by=c("state_abb", "year"), all.x=T)
full_data_long<- merge(full_data_long, citizen_ideaology_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, fed_elections_long, by=c("state_abb", "year"), all.x=T)
full_data_long<- merge(full_data_long, gov_elections_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, gov_party_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, pres_elections_long, by=c("state_abb", "year"), all.x=T)
full_data_long<- merge(full_data_long, state_exec_elections_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, state_legs_elections_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, state_legs_long, by=c("state_name", "year"), all.x=T)
full_data_long<- merge(full_data_long, us_states@data[,c("STATE_NAME", "DRAWSEQ")], by.x="state_name", by.y="STATE_NAME", all.x=T)
full_data_long<- na.locf(full_data_long)
full_data_long<- filter(full_data_long, year>2005, year<2014, state_name!="Hawaii", state_name!="Alaska")
full_data_long<- rename(full_data_long, draw_seq=DRAWSEQ)
full_data_long<- arrange(full_data_long, year, draw_seq)
##########################
###CREATE NEIGHBORHOODS###
##########################
us_states_coords<- coordinates(us_states)
us_states_nb<-poly2nb(us_states, queen = T, row.names=us_states@data$STATE_NAME)
plot(us_states_nb, us_states_coords, add=T)
us_states_lw<-nb2listw(us_states_nb, style="B")
us_states_sn<-listw2sn(us_states_lw)
us_states_nb_names<-as.data.frame(cbind(attr(us_states_sn, "region.id")[us_states_sn$from], attr(us_states_sn,
"region.id")[us_states_sn$to]))
us_states_nb_names<-aggregate(V2~ as.factor(V1), us_states_nb_names, paste, collapse = ", ")
us_states_nb_names<- rename(us_states_nb_names, state_name=`as.factor(V1)`, neighbors=V2)
full_data_long<- merge(full_data_long, us_states_nb_names, by="state_name", all.x=T)
full_data_long$state_name<- as.character(full_data_long$state_name)
names(full_data_long)
full_data_long<- arrange(full_data_long, year, draw_seq)
full_data_long[,c(2,4:8,10:35,37:41,43:47)]<-lapply(full_data_long[,c(2,4:8,10:35,37:41,43:47)], as.numeric)
full_data_long_numeric<-sapply(full_data_long, is.numeric)
full_data_long_spatlag <- data.frame(matrix(ncol=length(full_data_long_numeric), nrow = 0))
colnames(full_data_long_spatlag) <- names(full_data_long_numeric)
for (y in sort(unique(full_data_long$year))){
print(y)
us_states_ss<-filter(full_data_long, year==2006)
nb<-poly2nb(us_states) # Create neighbour list
weights<-nb2listw(nb,style="W") # Create weights (binary)
us_states_ss <- us_states_ss[sapply(us_states_ss,is.numeric)]
spatial_lag<-lapply(us_states_ss , function(x){
lag.listw(weights, x)})
full_data_long_spatlag<-rbind(full_data_long_spatlag, spatial_lag)
}
colnames(full_data_long_spatlag) <- paste("lagged", colnames(full_data_long_spatlag), sep = "_")
full_data_long<-cbind(full_data_long, full_data_long_spatlag)
View(full_data_long)
test<-do.call(rbind, us_states_lw)
View(test)
us_states_lw<-nb2listw(us_states_nb, style="W")
?spdep
test<-as_dsTMatrix_listw(us_states_lw)
test<-listw2mat(us_states_lw)
View(test)
us_states_spmatrix<-listw2mat(us_states_lw)
colnames(us_states_spmatrix)<-row.names(us_states_spmatrix)
View(us_states_spmatrix)
save(full_data_long, us_states, us_states_coords, us_states_lw, us_states_nb, us_states_sn, us_state_spmatrix, file="data/cleaned_dfs.Rdata")
save(full_data_long, us_states, us_states_coords, us_states_lw,
us_states_nb, us_states_sn, us_states_spmatrix,
file="data/cleaned_dfs.Rdata")
?Surv
View(everify_long)
surv_everify<-Surv(full_data_long$year, full_data_long$adoption)
?coxph
View(everify_long)
View(full_data_long)
View(full_data_long)
coxph(surv_everify~ median_income+pct_blk+pct_foreign, data = full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign, data = full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban, data = full_data_long)
summary(nospace_coxph)
full_data_long$time<- full_data_long$year-2005
nospace_coxph<-coxph(surv_everify~ time+median_income+pct_blk+pct_foreign+pct_urban, data = full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban, data = full_data_long)
View(full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov, data = full_data_long)
summary(nospace_coxph)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov+time+I(time^2), data = full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov+time+I(time^2)+I(time^3), data = full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov+rep_legs, data = full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov+rep_leg, data = full_data_long)
View(full_data_long)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov+rep_state_legs, data = full_data_long)
summary(nospace_coxph)
nospace_coxph<-coxph(surv_everify~ median_income+pct_blk+pct_foreign+pct_urban+rep_gov+rep_state_legs+time, data = full_data_long)
View(us_states_spmatrix)
?nb2listw
load("data/cleaned_dfs.Rdata")
source("scripts/load_packages.R")
load("data/cleaned_dfs.Rdata")
full_data_long<- arrange(state_name, time, adoption)
full_data_long<- arrange(full_data_long, state_name, time, adoption)
full_data_long<- arrange(full_data_long, state_name, "time", adoption)
full_data_long<- arrange(full_data_long, state_name, year, adoption)
View(full_data_long)
full_data_long$time<- full_data_long$year-2005
full_data_long<- arrange(full_data_long, state_name, time, adoption)
glm(adoption~ time + I(time^2) + I(time^3), data = full_data_long, family = "binomial")
glm(adoption~ time + I(time^2) + I(time^3)+
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(agriculture_donations/tot_state_elections), data = full_data_long, family = "binomial")
event_history_nospace<-glm(adoption~ time + I(time^2) + I(time^3)+
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(agriculture_donations/tot_state_elections), data = full_data_long, family = "binomial")
nospace_event_history<-glm(adoption~ time + I(time^2) + I(time^3)+
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(agriculture_donations/tot_state_elections), data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time + I(time^2) + I(time^3)+
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections), data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time + I(time^2)+
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections), data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections), data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk, data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_foreign, data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_hispanic, data = full_data_long, family = "binomial")
nospace_event_history<-glm(adoption~ time +
pct_foreign+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_hisp, data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_hisp+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_hisp, data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_hisp+ citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_hisp+lagged_rep_gov, data = full_data_long, family = "binomial")
summary(nospace_event_history)
nospace_event_history<-glm(adoption~ time +
pct_foreign+ pct_foreign_hispcitizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_hisp+lagged_rep_gov, data = full_data_long, family = "binomial")
nospace_event_history<-glm(adoption~ time +
pct_foreign+ pct_foreign_hisp+citizen_idea+ unemp_rate+ pct_urban+
I(agriculture_donations/tot_state_elections)+
I(construction_donations/tot_state_elections)+
rep_gov+pct_blk+lagged_pct_hisp+lagged_rep_gov, data = full_data_long, family = "binomial")
summary(nospace_event_history)
source("scripts/load_packages.R")
load("data/cleaned_dfs.Rdata")
View(us_states_spmatrix)
test<- us_states_spmatrix^2
View(test)
test<-dim(rbind(us_states_spmatrix,test))
test<- cbind(us_states_spmatrix, us_states_spmatrix)
View(test)
test<- rbind (us_states_spmatrix, us_states_spmatrix)
View(test)
pacman::p_load(plyr, dplyr, haven, tidyr,
plyr, reshape2, ggplot2,
foreign, tools, rgdal,
ggmap, car, Hmisc,
maptools, PBSmapping, acs,
stringr, gtools, blsAPI,
ggvis, zoo, survival,
spdep, sp, rgdal, maptools,
igraph)
us_state_wel  <- graph.adjacency(us_states_spmatrix ,weighted=TRUE)
us_state_wel <- get.data.frame(us_state_wel)
View(us_state_wel)
View(us_states_sn)
us_states_wel<- as.data.frame(c(from=NULL, to=NULL, weight=NULL))
for (y in unique(full_data_long$year)){
print(y)
matrix <- us_states_spmatrix
colnames(matrix) <- paste(y, colnames(matrix), sep = "_")
row.names(matrix) <- paste(y, row.names(matrix), sep = "_")
matrix  <- graph.adjacency(matrix ,weighted=TRUE)
wel <- get.data.frame(matrix)
rbind(us_states_wel, wel)
}
View(wel)
us_states_wel<- as.data.frame(c(from=NULL, to=NULL, weight=NULL))
for (y in unique(full_data_long$year)){
print(y)
matrix <- us_states_spmatrix
colnames(matrix) <- paste(y, colnames(matrix), sep = "_")
row.names(matrix) <- paste(y, row.names(matrix), sep = "_")
matrix  <- graph.adjacency(matrix ,weighted=TRUE)
wel <- get.data.frame(matrix)
us_states_wel<-rbind(us_states_wel, wel)
}
View(us_states_wel)
test<-get.adjacency(us_state_wel,attr='weight',sparse=FALSE)
g=graph.data.frame( us_states_wel)
test<-get.adjacency(g,sparse=FALSE)
View(test)
g
?graph.data.frame
?get.adjacency
test<-get.adjacency(g, attr"weight", sparse=FALSE)
test<-get.adjacency(g, attr="weight", sparse=FALSE)
View(test)
us_states_wel_graph=graph.data.frame( us_states_wel)
us_states_matrix<-get.adjacency(g, attr="weight", sparse=FALSE)
?spdep
us_states_lw<-mat2listw(us_states_spmatrix)
us_states_spmatrix<-get.adjacency(g, attr="weight", sparse=FALSE)
us_states_lw<-mat2listw(us_states_spmatrix)
?listw2nb
plot(us_states_lw, us_states_coords, add=T) #plot neighbors
us_states_lw<-nb2listw(us_states_nb, style="W") #create weights list
plot(us_states_lw, us_states_coords, add=T) #plot neighbors
plot(us_states_nb, us_states_coords, add=T) #plot neighbors
us_states_coords<- coordinates(us_states) #get coordinates for plotting
us_states_nb<-poly2nb(us_states, queen = T, row.names=us_states@data$STATE_NAME) #queen based weights matrix
plot(us_states_lw, us_states_coords, add=T) #plot neighbors
plot(us_states_nb, us_states_coords, add=T) #plot neighbors
quartz()
plot(us_states_nb, us_states_coords, add=T) #plot neighbors
